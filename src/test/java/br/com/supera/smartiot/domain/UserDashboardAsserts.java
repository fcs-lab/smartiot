package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserDashboardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserDashboardAllPropertiesEquals(UserDashboard expected, UserDashboard actual) {
        assertUserDashboardAutoGeneratedPropertiesEquals(expected, actual);
        assertUserDashboardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserDashboardAllUpdatablePropertiesEquals(UserDashboard expected, UserDashboard actual) {
        assertUserDashboardUpdatableFieldsEquals(expected, actual);
        assertUserDashboardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserDashboardAutoGeneratedPropertiesEquals(UserDashboard expected, UserDashboard actual) {
        assertThat(expected)
            .as("Verify UserDashboard auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserDashboardUpdatableFieldsEquals(UserDashboard expected, UserDashboard actual) {
        assertThat(expected)
            .as("Verify UserDashboard relevant properties")
            .satisfies(e -> assertThat(e.getDashboardName()).as("check dashboardName").isEqualTo(actual.getDashboardName()))
            .satisfies(e -> assertThat(e.getWidgets()).as("check widgets").isEqualTo(actual.getWidgets()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserDashboardUpdatableRelationshipsEquals(UserDashboard expected, UserDashboard actual) {}
}
