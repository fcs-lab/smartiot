package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleStatusLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleStatusLogAllPropertiesEquals(VehicleStatusLog expected, VehicleStatusLog actual) {
        assertVehicleStatusLogAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleStatusLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleStatusLogAllUpdatablePropertiesEquals(VehicleStatusLog expected, VehicleStatusLog actual) {
        assertVehicleStatusLogUpdatableFieldsEquals(expected, actual);
        assertVehicleStatusLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleStatusLogAutoGeneratedPropertiesEquals(VehicleStatusLog expected, VehicleStatusLog actual) {
        assertThat(expected)
            .as("Verify VehicleStatusLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleStatusLogUpdatableFieldsEquals(VehicleStatusLog expected, VehicleStatusLog actual) {
        assertThat(expected)
            .as("Verify VehicleStatusLog relevant properties")
            .satisfies(e -> assertThat(e.getStatusChangeDate()).as("check statusChangeDate").isEqualTo(actual.getStatusChangeDate()))
            .satisfies(e -> assertThat(e.getNewStatus()).as("check newStatus").isEqualTo(actual.getNewStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleStatusLogUpdatableRelationshipsEquals(VehicleStatusLog expected, VehicleStatusLog actual) {}
}
