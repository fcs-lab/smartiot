package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChatBookingAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatBookingAllPropertiesEquals(ChatBooking expected, ChatBooking actual) {
        assertChatBookingAutoGeneratedPropertiesEquals(expected, actual);
        assertChatBookingAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatBookingAllUpdatablePropertiesEquals(ChatBooking expected, ChatBooking actual) {
        assertChatBookingUpdatableFieldsEquals(expected, actual);
        assertChatBookingUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatBookingAutoGeneratedPropertiesEquals(ChatBooking expected, ChatBooking actual) {
        assertThat(expected)
            .as("Verify ChatBooking auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatBookingUpdatableFieldsEquals(ChatBooking expected, ChatBooking actual) {
        assertThat(expected)
            .as("Verify ChatBooking relevant properties")
            .satisfies(e -> assertThat(e.getBookingTimestamp()).as("check bookingTimestamp").isEqualTo(actual.getBookingTimestamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatBookingUpdatableRelationshipsEquals(ChatBooking expected, ChatBooking actual) {
        assertThat(expected)
            .as("Verify ChatBooking relationships")
            .satisfies(e -> assertThat(e.getSession()).as("check session").isEqualTo(actual.getSession()))
            .satisfies(e -> assertThat(e.getVehicle()).as("check vehicle").isEqualTo(actual.getVehicle()));
    }
}
