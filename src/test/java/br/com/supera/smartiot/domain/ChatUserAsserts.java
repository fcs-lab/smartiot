package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ChatUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUserAllPropertiesEquals(ChatUser expected, ChatUser actual) {
        assertChatUserAutoGeneratedPropertiesEquals(expected, actual);
        assertChatUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUserAllUpdatablePropertiesEquals(ChatUser expected, ChatUser actual) {
        assertChatUserUpdatableFieldsEquals(expected, actual);
        assertChatUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUserAutoGeneratedPropertiesEquals(ChatUser expected, ChatUser actual) {
        assertThat(expected)
            .as("Verify ChatUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUserUpdatableFieldsEquals(ChatUser expected, ChatUser actual) {
        assertThat(expected)
            .as("Verify ChatUser relevant properties")
            .satisfies(e -> assertThat(e.getUserId()).as("check userId").isEqualTo(actual.getUserId()))
            .satisfies(e -> assertThat(e.getUserName()).as("check userName").isEqualTo(actual.getUserName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertChatUserUpdatableRelationshipsEquals(ChatUser expected, ChatUser actual) {}
}
