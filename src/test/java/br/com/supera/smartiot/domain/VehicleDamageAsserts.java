package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleDamageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleDamageAllPropertiesEquals(VehicleDamage expected, VehicleDamage actual) {
        assertVehicleDamageAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleDamageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleDamageAllUpdatablePropertiesEquals(VehicleDamage expected, VehicleDamage actual) {
        assertVehicleDamageUpdatableFieldsEquals(expected, actual);
        assertVehicleDamageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleDamageAutoGeneratedPropertiesEquals(VehicleDamage expected, VehicleDamage actual) {
        assertThat(expected)
            .as("Verify VehicleDamage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleDamageUpdatableFieldsEquals(VehicleDamage expected, VehicleDamage actual) {
        assertThat(expected)
            .as("Verify VehicleDamage relevant properties")
            .satisfies(e -> assertThat(e.getDamageDescription()).as("check damageDescription").isEqualTo(actual.getDamageDescription()))
            .satisfies(e -> assertThat(e.getReportedAt()).as("check reportedAt").isEqualTo(actual.getReportedAt()))
            .satisfies(e -> assertThat(e.getDamageStatus()).as("check damageStatus").isEqualTo(actual.getDamageStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleDamageUpdatableRelationshipsEquals(VehicleDamage expected, VehicleDamage actual) {
        assertThat(expected)
            .as("Verify VehicleDamage relationships")
            .satisfies(e -> assertThat(e.getVehicle()).as("check vehicle").isEqualTo(actual.getVehicle()));
    }
}
