package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeviceTelemetryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceTelemetryAllPropertiesEquals(DeviceTelemetry expected, DeviceTelemetry actual) {
        assertDeviceTelemetryAutoGeneratedPropertiesEquals(expected, actual);
        assertDeviceTelemetryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceTelemetryAllUpdatablePropertiesEquals(DeviceTelemetry expected, DeviceTelemetry actual) {
        assertDeviceTelemetryUpdatableFieldsEquals(expected, actual);
        assertDeviceTelemetryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceTelemetryAutoGeneratedPropertiesEquals(DeviceTelemetry expected, DeviceTelemetry actual) {
        assertThat(expected)
            .as("Verify DeviceTelemetry auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceTelemetryUpdatableFieldsEquals(DeviceTelemetry expected, DeviceTelemetry actual) {
        assertThat(expected)
            .as("Verify DeviceTelemetry relevant properties")
            .satisfies(e -> assertThat(e.getTelemetryTimestamp()).as("check telemetryTimestamp").isEqualTo(actual.getTelemetryTimestamp()))
            .satisfies(e -> assertThat(e.getLatitude()).as("check latitude").isEqualTo(actual.getLatitude()))
            .satisfies(e -> assertThat(e.getLongitude()).as("check longitude").isEqualTo(actual.getLongitude()))
            .satisfies(e -> assertThat(e.getSpeed()).as("check speed").isEqualTo(actual.getSpeed()))
            .satisfies(e -> assertThat(e.getFuelLevel()).as("check fuelLevel").isEqualTo(actual.getFuelLevel()))
            .satisfies(e -> assertThat(e.getEngineStatus()).as("check engineStatus").isEqualTo(actual.getEngineStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceTelemetryUpdatableRelationshipsEquals(DeviceTelemetry expected, DeviceTelemetry actual) {}
}
