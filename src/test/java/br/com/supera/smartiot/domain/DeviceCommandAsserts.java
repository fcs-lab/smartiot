package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DeviceCommandAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceCommandAllPropertiesEquals(DeviceCommand expected, DeviceCommand actual) {
        assertDeviceCommandAutoGeneratedPropertiesEquals(expected, actual);
        assertDeviceCommandAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceCommandAllUpdatablePropertiesEquals(DeviceCommand expected, DeviceCommand actual) {
        assertDeviceCommandUpdatableFieldsEquals(expected, actual);
        assertDeviceCommandUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceCommandAutoGeneratedPropertiesEquals(DeviceCommand expected, DeviceCommand actual) {
        assertThat(expected)
            .as("Verify DeviceCommand auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceCommandUpdatableFieldsEquals(DeviceCommand expected, DeviceCommand actual) {
        assertThat(expected)
            .as("Verify DeviceCommand relevant properties")
            .satisfies(e -> assertThat(e.getCommandType()).as("check commandType").isEqualTo(actual.getCommandType()))
            .satisfies(e -> assertThat(e.getSentAt()).as("check sentAt").isEqualTo(actual.getSentAt()))
            .satisfies(e -> assertThat(e.getExecutedAt()).as("check executedAt").isEqualTo(actual.getExecutedAt()))
            .satisfies(e -> assertThat(e.getCommandStatus()).as("check commandStatus").isEqualTo(actual.getCommandStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDeviceCommandUpdatableRelationshipsEquals(DeviceCommand expected, DeviceCommand actual) {}
}
