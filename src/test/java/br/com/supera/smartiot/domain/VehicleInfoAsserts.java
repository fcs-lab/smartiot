package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleInfoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleInfoAllPropertiesEquals(VehicleInfo expected, VehicleInfo actual) {
        assertVehicleInfoAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleInfoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleInfoAllUpdatablePropertiesEquals(VehicleInfo expected, VehicleInfo actual) {
        assertVehicleInfoUpdatableFieldsEquals(expected, actual);
        assertVehicleInfoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleInfoAutoGeneratedPropertiesEquals(VehicleInfo expected, VehicleInfo actual) {
        assertThat(expected)
            .as("Verify VehicleInfo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleInfoUpdatableFieldsEquals(VehicleInfo expected, VehicleInfo actual) {
        assertThat(expected)
            .as("Verify VehicleInfo relevant properties")
            .satisfies(e -> assertThat(e.getModelName()).as("check modelName").isEqualTo(actual.getModelName()))
            .satisfies(e -> assertThat(e.getLicensePlate()).as("check licensePlate").isEqualTo(actual.getLicensePlate()))
            .satisfies(e -> assertThat(e.getVehicleStatus()).as("check vehicleStatus").isEqualTo(actual.getVehicleStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleInfoUpdatableRelationshipsEquals(VehicleInfo expected, VehicleInfo actual) {}
}
