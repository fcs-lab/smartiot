package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DadoSensorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDadoSensorAllPropertiesEquals(DadoSensor expected, DadoSensor actual) {
        assertDadoSensorAutoGeneratedPropertiesEquals(expected, actual);
        assertDadoSensorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDadoSensorAllUpdatablePropertiesEquals(DadoSensor expected, DadoSensor actual) {
        assertDadoSensorUpdatableFieldsEquals(expected, actual);
        assertDadoSensorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDadoSensorAutoGeneratedPropertiesEquals(DadoSensor expected, DadoSensor actual) {
        assertThat(expected)
            .as("Verify DadoSensor auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDadoSensorUpdatableFieldsEquals(DadoSensor expected, DadoSensor actual) {
        assertThat(expected)
            .as("Verify DadoSensor relevant properties")
            .satisfies(e -> assertThat(e.getDados()).as("check dados").isEqualTo(actual.getDados()))
            .satisfies(e -> assertThat(e.getTimestamp()).as("check timestamp").isEqualTo(actual.getTimestamp()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDadoSensorUpdatableRelationshipsEquals(DadoSensor expected, DadoSensor actual) {}
}
