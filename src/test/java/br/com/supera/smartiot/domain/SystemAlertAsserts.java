package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SystemAlertAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemAlertAllPropertiesEquals(SystemAlert expected, SystemAlert actual) {
        assertSystemAlertAutoGeneratedPropertiesEquals(expected, actual);
        assertSystemAlertAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemAlertAllUpdatablePropertiesEquals(SystemAlert expected, SystemAlert actual) {
        assertSystemAlertUpdatableFieldsEquals(expected, actual);
        assertSystemAlertUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemAlertAutoGeneratedPropertiesEquals(SystemAlert expected, SystemAlert actual) {
        assertThat(expected)
            .as("Verify SystemAlert auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemAlertUpdatableFieldsEquals(SystemAlert expected, SystemAlert actual) {
        assertThat(expected)
            .as("Verify SystemAlert relevant properties")
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()))
            .satisfies(e -> assertThat(e.getAlertDescription()).as("check alertDescription").isEqualTo(actual.getAlertDescription()))
            .satisfies(e -> assertThat(e.getAlertType()).as("check alertType").isEqualTo(actual.getAlertType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSystemAlertUpdatableRelationshipsEquals(SystemAlert expected, SystemAlert actual) {
        assertThat(expected)
            .as("Verify SystemAlert relationships")
            .satisfies(e -> assertThat(e.getVehicle()).as("check vehicle").isEqualTo(actual.getVehicle()));
    }
}
