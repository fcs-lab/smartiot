package br.com.supera.smartiot.domain;

import static br.com.supera.smartiot.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class WaterAlertAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterAlertAllPropertiesEquals(WaterAlert expected, WaterAlert actual) {
        assertWaterAlertAutoGeneratedPropertiesEquals(expected, actual);
        assertWaterAlertAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterAlertAllUpdatablePropertiesEquals(WaterAlert expected, WaterAlert actual) {
        assertWaterAlertUpdatableFieldsEquals(expected, actual);
        assertWaterAlertUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterAlertAutoGeneratedPropertiesEquals(WaterAlert expected, WaterAlert actual) {
        assertThat(expected)
            .as("Verify WaterAlert auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterAlertUpdatableFieldsEquals(WaterAlert expected, WaterAlert actual) {
        assertThat(expected)
            .as("Verify WaterAlert relevant properties")
            .satisfies(e -> assertThat(e.getAlertType()).as("check alertType").isEqualTo(actual.getAlertType()))
            .satisfies(e -> assertThat(e.getAlertDescription()).as("check alertDescription").isEqualTo(actual.getAlertDescription()))
            .satisfies(
                e ->
                    assertThat(e.getCreatedDate())
                        .as("check createdDate")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getCreatedDate())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterAlertUpdatableRelationshipsEquals(WaterAlert expected, WaterAlert actual) {}
}
