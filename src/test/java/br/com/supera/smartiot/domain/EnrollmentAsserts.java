package br.com.supera.smartiot.domain;

import static br.com.supera.smartiot.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class EnrollmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrollmentAllPropertiesEquals(Enrollment expected, Enrollment actual) {
        assertEnrollmentAutoGeneratedPropertiesEquals(expected, actual);
        assertEnrollmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrollmentAllUpdatablePropertiesEquals(Enrollment expected, Enrollment actual) {
        assertEnrollmentUpdatableFieldsEquals(expected, actual);
        assertEnrollmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrollmentAutoGeneratedPropertiesEquals(Enrollment expected, Enrollment actual) {
        assertThat(expected)
            .as("Verify Enrollment auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrollmentUpdatableFieldsEquals(Enrollment expected, Enrollment actual) {
        assertThat(expected)
            .as("Verify Enrollment relevant properties")
            .satisfies(e -> assertThat(e.getEnrollmentType()).as("check enrollmentType").isEqualTo(actual.getEnrollmentType()))
            .satisfies(
                e ->
                    assertThat(e.getEnrollmentDate())
                        .as("check enrollmentDate")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getEnrollmentDate())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEnrollmentUpdatableRelationshipsEquals(Enrollment expected, Enrollment actual) {}
}
