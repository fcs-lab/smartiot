package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class UserReportAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReportAllPropertiesEquals(UserReport expected, UserReport actual) {
        assertUserReportAutoGeneratedPropertiesEquals(expected, actual);
        assertUserReportAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReportAllUpdatablePropertiesEquals(UserReport expected, UserReport actual) {
        assertUserReportUpdatableFieldsEquals(expected, actual);
        assertUserReportUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReportAutoGeneratedPropertiesEquals(UserReport expected, UserReport actual) {
        assertThat(expected)
            .as("Verify UserReport auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReportUpdatableFieldsEquals(UserReport expected, UserReport actual) {
        assertThat(expected)
            .as("Verify UserReport relevant properties")
            .satisfies(e -> assertThat(e.getReportType()).as("check reportType").isEqualTo(actual.getReportType()))
            .satisfies(e -> assertThat(e.getGeneratedAt()).as("check generatedAt").isEqualTo(actual.getGeneratedAt()))
            .satisfies(e -> assertThat(e.getReportContent()).as("check reportContent").isEqualTo(actual.getReportContent()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertUserReportUpdatableRelationshipsEquals(UserReport expected, UserReport actual) {}
}
