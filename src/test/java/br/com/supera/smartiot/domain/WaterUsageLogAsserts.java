package br.com.supera.smartiot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WaterUsageLogAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterUsageLogAllPropertiesEquals(WaterUsageLog expected, WaterUsageLog actual) {
        assertWaterUsageLogAutoGeneratedPropertiesEquals(expected, actual);
        assertWaterUsageLogAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterUsageLogAllUpdatablePropertiesEquals(WaterUsageLog expected, WaterUsageLog actual) {
        assertWaterUsageLogUpdatableFieldsEquals(expected, actual);
        assertWaterUsageLogUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterUsageLogAutoGeneratedPropertiesEquals(WaterUsageLog expected, WaterUsageLog actual) {
        assertThat(expected)
            .as("Verify WaterUsageLog auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterUsageLogUpdatableFieldsEquals(WaterUsageLog expected, WaterUsageLog actual) {
        assertThat(expected)
            .as("Verify WaterUsageLog relevant properties")
            .satisfies(e -> assertThat(e.getUsageDate()).as("check usageDate").isEqualTo(actual.getUsageDate()))
            .satisfies(e -> assertThat(e.getAmountUsed()).as("check amountUsed").isEqualTo(actual.getAmountUsed()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWaterUsageLogUpdatableRelationshipsEquals(WaterUsageLog expected, WaterUsageLog actual) {}
}
